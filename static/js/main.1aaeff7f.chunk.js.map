{"version":3,"sources":["components/HikeCard/HikeCard.js","components/FindAHike/FindAHike.js","components/LandingPage/LandingPage.js","components/Footer/Footer.js","components/Nav/Nav.js","components/TickList/TickList.js","App.js","index.js"],"names":["HikeCard","data","React","useState","value","handleClick","console","log","className","onClick","src","alt","Rating","name","readOnly","FindAHike","onLoad","onUnmount","containerStyle","address","setAddress","maxResults","setMaxResults","minLength","setMinLength","minStars","setMinStars","maxDistance","setMaxDistance","setLat","lat","setLng","lng","setData","center","setCenter","setStatus","status","setError","position","setPosition","response","setResponse","error","setValue","hikingProjectKey","a","getLatLng","queryString","params","Object","keys","map","key","encodeURIComponent","join","formatQueryParams","lon","hikeLength","hikeRating","fetch","then","res","json","role","id","htmlFor","onChange","e","target","type","placeholder","required","preventDefault","Geocode","fromAddress","results","geometry","location","latLng","googleMapsApiKey","mapContainerStyle","zoom","trails","latitude","longitude","resolveData","href","url","length","accent","decent","conditionStatus","conditionDetails","conditionDate","summary","displayData","LandingPage","to","Footer","ScrollLink","Scroll","Link","Nav","spy","smooth","duration","activeClass","TickList","action","setApiKey","setLanguage","width","height","App","setMap","setUrl","marker","setMarker","useCallback","bounds","window","google","maps","LatLngBounds","fitBounds","exact","path","render","props","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1aaeff7f.chunk.js","sourcesContent":["import React from 'react'\nimport Rating from '@material-ui/lab/Rating';\n\nexport default function HikeCard({ data }) {\n\n    const [value, setValue] = React.useState(2);\n\n    let handleClick = () => {\n        console.log(\"test\");\n        console.log(data);\n    }\n\n    return (\n        <>\n            {/* <div className=\"hike-card\" onClick={handleClick}>\n                <img className=\"hike-card-img\" src=\"\" alt=\"\" />\n                <div className=\"hike-card-text\">\n                    <h3>{data.trails.name}</h3>\n                    <p>{data.trails.location}</p>\n                    <p>{data.trails.length}</p>\n                    <p>accent: {data.trails.accent} decent: {data.trails.decent}</p>\n                    <p>condition status and details: {data.trails.conditionStatus} {data.trails.conditionDetails}</p>\n                    <p className=\"hike-card-subtext\">last updated: {data.trails.conditionDate}</p>\n                    <p>{data.trails.summary}</p>\n                    <div className=\"rating\">\n                        <Rating name=\"read-only\" value={value} readOnly />\n                    </div>\n                </div>\n            </div> */}\n            <div className=\"hike-card\" onClick={handleClick}>\n            <img className=\"hike-card-img\" src=\"\" alt=\"\" />\n            <div className=\"hike-card-text\">\n                <h3>SoapStone-Santee-Ridge Loop</h3>\n                <p>Location maryland elkridge</p>\n                <p>8.2mi</p>\n                <p>accent and decent</p>\n                <p>condition status details, and date</p>\n                <p className=\"hike-card-summary\">Summary classic long mountain route.</p>\n                <div className=\"rating\">\n                    <Rating name=\"read-only\" value={value} readOnly />\n                </div>\n            </div>\n        </div>\n        <div className=\"hike-card\" onClick={handleClick}>\n            <img className=\"hike-card-img\" src=\"\" alt=\"\" />\n            <div className=\"hike-card-text\">\n                <h3>SoapStone-Santee-Ridge Loop</h3>\n                <p>Location maryland elkridge</p>\n                <p>8.2mi</p>\n                <p>accent and decent</p>\n                <p>condition status details, and date</p>\n                <p>Summary classic long mountain route.</p>\n                <div className=\"rating\">\n                    <Rating name=\"read-only\" value={value} readOnly />\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport Geocode from 'react-geocode';\nimport HikeCard from '../HikeCard/HikeCard';\nimport Rating from '@material-ui/lab/Rating';\n\nexport default function FindAHike({ \n    onLoad, \n    onUnmount, \n    containerStyle, \n    address = \"\", \n    setAddress, \n    maxResults = 0, \n    setMaxResults, \n    minLength = 0, \n    setMinLength, \n    minStars = 0, \n    setMinStars, \n    maxDistance = 30, \n    setMaxDistance, \n    lat = 0, \n    setLat, \n    lng = 0, \n    setLng, \n    data = {}, \n    setData, \n    center = {lat: -34.397, lng: 150.644},\n    setCenter,\n    status = \"idle\",\n    setStatus,\n    position = [],\n    setPosition,\n    response = [],\n    setResponse,\n    error = [],\n    setError,\n    value = 2,\n    setValue }) {\n        \n        let url = \"\";\n        let hikingProjectURL = \"https://www.hikingproject.com/data/get-trails?\";\n        let hikingProjectKey = \"200793847-c31065fb4a7ef9c4bec2522c771d7f3c\";\n\n        const handleSubmit = (e) => {\n            e.preventDefault(); \n            Geocode.fromAddress(address).then(\n                response => {\n                  const { lat, lng } = response.results[0].geometry.location;\n                  setLat(lat);\n                  setLng(lng);\n                  latLng(hikingProjectKey, lat, lng, maxResults, minLength, minStars, maxDistance);\n                  setCenter({lat: lat, lng: lng});\n                },\n                error => {\n                  console.error(error);\n                }\n              );\n        }\n        \n        async function latLng(hikingProjectKey, lat, lng, maxResults, minLength, minStars, maxDistance) {\n          await getLatLng(hikingProjectKey, lat, lng, maxResults, minLength, minStars, maxDistance);\n        };\n        \n        function formatQueryParams(params) {\n          var queryItems = Object.keys(params)\n              .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n              return queryItems.join('&');\n        };\n        \n        function getLatLng(hikingProjectKey, lat, lng, maxResults, minLength, minStars, maxDistance) {\n          var params = {\n              key: hikingProjectKey,\n              lat: lat,\n              lon: lng,\n              maxDistance: maxDistance,\n              maxResults: maxResults,\n              hikeLength: minLength,\n              hikeRating: minStars\n          };\n          var queryString = formatQueryParams(params);\n          url = hikingProjectURL + queryString;\n          \n          fetch(url)\n            .then(res => res.json())\n            .then(\n              (data) => {\n                setStatus('fetched');\n                setData(data);\n              },\n              (error) => {\n                setStatus('fetched');\n                setError(error);\n              })\n        }\n        \n        const resolveData = (data) => {\n          if (data && data.trails)  \n            return data && data.trails.map((data) => <Marker key={data.id} position={{lat:data.latitude, lng: data.longitude}} />\n          )}\n        \n        const displayData = (data) => {\n          if (data && data.trails) {\n            // data.trails.map((data) => setValue(data.stars))\n            return data && data.trails.map((data) =>  \n            <div className=\"hike-card\" key={data.id}>\n              <img className=\"hike-card-img\" src=\"\" alt=\"\" />\n              <div className=\"hike-card-text\">\n                  <a target='_blank' href={data.url}><h3>{data.name}</h3></a>\n                  <p>{data.location}</p>\n                  <p>{data.length}</p>\n                  <p>accent: {data.accent} decent: {data.decent}</p>\n                  <p>condition status and details: {data.conditionStatus} {data.conditionDetails}</p>\n                  <p className=\"hike-card-subtext\">last updated: {data.conditionDate}</p>\n                  <p>{data.summary}</p>\n                  {/* <div className=\"rating\">\n                      <Rating name=\"read-only\" value={value} readOnly />\n                  </div> */}\n              </div>\n            </div> \n        )}\n            \n        }\n        \n        //   if (error) {\n        //     return <div>Error: {error.message}</div>;\n        //   } else if (!isLoaded) {\n        //     return <div>Loading...</div>;\n        //   } else {\n        //     return (\n        //       <ul>\n        //         {items.map(item => (\n        //           <li key={item.id}>\n        //             {item.name} {item.price}\n        //           </li>\n        //         ))}\n        //       </ul>\n        //     );\n        //   }\n        // }\n\n    return (\n        <div>\n            <header role=\"banner\">\n                <h2>Find hikes near you</h2>\n            </header>\n            <form id=\"hike-finder\">\n                <div className=\"form\">\n                    <label htmlFor=\"address\">Enter a location</label>\n                    <input onChange={e => setAddress(e.target.value)} value={address} type=\"text\" id=\"address\" name=\"address\" placeholder=\"Appalachian trail\" required />\n                </div>\n                <div className =\"form\">\n                    <label htmlFor=\"resultsLimit\">Result limit</label>\n                    <select onChange={e => setMaxResults(e.target.value)} value={maxResults} type=\"number\" id=\"resultsLimit\" name=\"resultsLimit\" >\n                        <option value=\"10\">10</option>\n                        <option value=\"50\">50</option>\n                        <option value=\"100\">100</option>\n                        <option value=\"200\">200</option>\n                        <option value=\"300\">300</option>\n                        <option value=\"400\">400</option>\n                        <option value=\"500\">500</option>\n                    </select>\n                </div>\n                <div className=\"form\">\n                    <label htmlFor=\"search-area\">Search area</label>\n                    <select onChange={e => setMaxDistance(e.target.value)} value={maxDistance} id=\"search-area\" name=\"search-area\">\n                        <option value=\"30\">30 Miles</option>\n                        <option value=\"50\">50 Miles</option>\n                        <option value=\"100\">100 Miles</option>\n                        <option value=\"150\">150 Miles</option>\n                        <option value=\"200\">200 Miles</option>\n                    </select>\n                </div>\n                <div className=\"form\">\n                    <label htmlFor=\"hike-length\">Hike length</label>\n                    <select onChange={e => setMinLength(e.target.value)} value={minLength} id=\"hike-length\" name=\"hike-length\">\n                        <option value=\"5\">5 Miles</option>\n                        <option value=\"10\">10 Miles</option>\n                        <option value=\"15\">15 Miles</option>\n                        <option value=\"20\">20 Miles</option>\n                        <option value=\"0\">No limit</option>\n                    </select>\n                </div>\n                <div className=\"form\">\n                    <label htmlFor=\"rating\">Hike rating</label>\n                    <select onChange={e => setMinStars(e.target.value)} value={minStars} id=\"rating\" name=\"rating\">\n                        <option value=\"1\">1 star</option>\n                        <option value=\"2\">2 star</option>\n                        <option value=\"3\">3 star</option>\n                        <option value=\"4\">4 star</option>\n                        <option value=\"0\">No limit</option>\n                    </select>\n                </div>\n                <input type=\"button\" value=\"search\" id=\"submit\" onClick={handleSubmit}/>\n            </form>\n            <p id=\"js-error-message\" className=\"error-message\"></p>\n            <div className=\"map\">\n            <LoadScript\n              googleMapsApiKey=\"AIzaSyD1OurySFNmim0G5iuXQ-8To7tec6RO0qk\">\n                {console.log(center)}\n              <GoogleMap\n                mapContainerStyle={containerStyle}\n                center={center}\n                zoom={10}\n                onLoad={onLoad}\n                onUnmount={onUnmount}>\n                <Marker\n                  position={center} />\n                {resolveData(data)}\n            </GoogleMap>\n          </LoadScript>\n          {displayData(data)}\n        </div>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Element } from 'react-scroll';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport Geocode from 'react-geocode';\nimport HikeCard from '../HikeCard/HikeCard';\nimport Rating from '@material-ui/lab/Rating';\n\nexport default function LandingPage({ \n    onLoad, \n    onUnmount, \n    containerStyle, \n    address = \"\", \n    setAddress, \n    maxResults = 0, \n    setMaxResults, \n    minLength = 0, \n    setMinLength, \n    minStars = 0, \n    setMinStars, \n    maxDistance = 30, \n    setMaxDistance, \n    lat = 0, \n    setLat, \n    lng = 0, \n    setLng, \n    data = {}, \n    setData, \n    center = {lat: -34.397, lng: 150.644},\n    setCenter,\n    status = \"idle\",\n    setStatus,\n    position = [],\n    setPosition,\n    response = [],\n    setResponse,\n    error = [],\n    setError,\n    value = 2,\n    setValue }) {\n\nlet url = \"\";\nlet hikingProjectURL = \"https://www.hikingproject.com/data/get-trails?\";\nlet hikingProjectKey = \"200793847-c31065fb4a7ef9c4bec2522c771d7f3c\";\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); \n    Geocode.fromAddress(address).then(\n        response => {\n          const { lat, lng } = response.results[0].geometry.location;\n          setLat(lat);\n          setLng(lng);\n          latLng(hikingProjectKey, lat, lng, maxResults, minLength, minStars, maxDistance);\n          setCenter({lat: lat, lng: lng});\n        },\n        error => {\n          console.error(error);\n        }\n      );\n}\n\nasync function latLng(hikingProjectKey, lat, lng, maxResults, minLength, minStars, maxDistance) {\n  await getLatLng(hikingProjectKey, lat, lng, maxResults, minLength, minStars, maxDistance);\n};\n\nfunction formatQueryParams(params) {\n  var queryItems = Object.keys(params)\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n      return queryItems.join('&');\n};\n\nfunction getLatLng(hikingProjectKey, lat, lng, maxResults, minLength, minStars, maxDistance) {\n  var params = {\n      key: hikingProjectKey,\n      lat: lat,\n      lon: lng,\n      maxDistance: maxDistance,\n      maxResults: maxResults,\n      hikeLength: minLength,\n      hikeRating: minStars\n  };\n  var queryString = formatQueryParams(params);\n  url = hikingProjectURL + queryString;\n  \n  fetch(url)\n    .then(res => res.json())\n    .then(\n      (data) => {\n        setStatus('fetched');\n        setData(data);\n      },\n      (error) => {\n        setStatus('fetched');\n        setError(error);\n      })\n}\n\nconst resolveData = (data) => {\n  if (data && data.trails)  \n    return data && data.trails.map((data) => <Marker key={data.id} position={{lat:data.latitude, lng: data.longitude}} />\n  )}\n\nconst displayData = (data) => {\n  if (data && data.trails) {\n    // data.trails.map((data) => setValue(data.stars))\n    return data && data.trails.map((data) =>  \n    <div className=\"hike-card\" key={data.id}>\n      <img className=\"hike-card-img\" src=\"\" alt=\"\" />\n      <div className=\"hike-card-text\">\n          <a target='_blank' href={data.url}><h3>{data.name}</h3></a>\n          <p>{data.location}</p>\n          <p>{data.length}</p>\n          <p>accent: {data.accent} decent: {data.decent}</p>\n          <p>condition status and details: {data.conditionStatus} {data.conditionDetails}</p>\n          <p className=\"hike-card-subtext\">last updated: {data.conditionDate}</p>\n          <p>{data.summary}</p>\n          {/* <div className=\"rating\">\n              <Rating name=\"read-only\" value={value} readOnly />\n          </div> */}\n      </div>\n    </div> \n)}\n    \n}\n\n//   if (error) {\n//     return <div>Error: {error.message}</div>;\n//   } else if (!isLoaded) {\n//     return <div>Loading...</div>;\n//   } else {\n//     return (\n//       <ul>\n//         {items.map(item => (\n//           <li key={item.id}>\n//             {item.name} {item.price}\n//           </li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n\n  return (\n        <div>\n            <main role=\"main\">\n      <header role=\"banner\">\n        <h1>Hiking Tick list</h1>\n        <h2>Find hikes near you</h2>\n      </header>\n      <section>\n        <header>\n            <h3>Find Hikes near you and make a tick list for each hike.</h3>\n        </header>\n        <form id=\"hike-finder\">\n                <div className=\"form\">\n                    <label htmlFor=\"address\">Enter a location</label>\n                    <input onChange={e => setAddress(e.target.value)} value={address} type=\"text\" id=\"address\" name=\"address\" placeholder=\"Appalachian trail\" required />\n                </div>\n                <div className =\"form\">\n                    <label htmlFor=\"resultsLimit\">Result limit</label>\n                    <select onChange={e => setMaxResults(e.target.value)} value={maxResults} type=\"number\" id=\"resultsLimit\" name=\"resultsLimit\" >\n                        <option value=\"10\">10</option>\n                        <option value=\"50\">50</option>\n                        <option value=\"100\">100</option>\n                        <option value=\"200\">200</option>\n                        <option value=\"300\">300</option>\n                        <option value=\"400\">400</option>\n                        <option value=\"500\">500</option>\n                    </select>\n                </div>\n                <div className=\"form\">\n                    <label htmlFor=\"search-area\">Search area</label>\n                    <select onChange={e => setMaxDistance(e.target.value)} value={maxDistance} id=\"search-area\" name=\"search-area\">\n                        <option value=\"30\">30 Miles</option>\n                        <option value=\"50\">50 Miles</option>\n                        <option value=\"100\">100 Miles</option>\n                        <option value=\"150\">150 Miles</option>\n                        <option value=\"200\">200 Miles</option>\n                    </select>\n                </div>\n                <div className=\"form\">\n                    <label htmlFor=\"hike-length\">Hike length</label>\n                    <select onChange={e => setMinLength(e.target.value)} value={minLength} id=\"hike-length\" name=\"hike-length\">\n                        <option value=\"5\">5 Miles</option>\n                        <option value=\"10\">10 Miles</option>\n                        <option value=\"15\">15 Miles</option>\n                        <option value=\"20\">20 Miles</option>\n                        <option value=\"0\">No limit</option>\n                    </select>\n                </div>\n                <div className=\"form\">\n                    <label htmlFor=\"rating\">Hike rating</label>\n                    <select onChange={e => setMinStars(e.target.value)} value={minStars} id=\"rating\" name=\"rating\">\n                        <option value=\"1\">1 star</option>\n                        <option value=\"2\">2 star</option>\n                        <option value=\"3\">3 star</option>\n                        <option value=\"4\">4 star</option>\n                        <option value=\"0\">No limit</option>\n                    </select>\n                </div>\n                <input type=\"button\" value=\"search\" id=\"submit\" onClick={handleSubmit}/>\n            </form>\n          <div className=\"map\">\n            <LoadScript\n              googleMapsApiKey=\"AIzaSyD1OurySFNmim0G5iuXQ-8To7tec6RO0qk\">\n                {console.log(center)}\n              <GoogleMap\n                mapContainerStyle={containerStyle}\n                center={center}\n                zoom={10}\n                onLoad={onLoad}\n                onUnmount={onUnmount}>\n                <Marker\n                  position={center} />\n                {resolveData(data)}\n            </GoogleMap>\n          </LoadScript>\n          {displayData(data)}\n        </div>\n      </section>\n      <Element id='signup-form' name='signup-form'>\n            <header>\n                <h3>Start Now</h3>\n            </header>\n            <form className='signup-form'>\n                <div>\n                <label htmlFor=\"first-name\">First name</label>\n                <input placeholder='First Name' type=\"text\" name='first-name' id='first-name' />\n                </div>\n                <div>\n                <label htmlFor=\"last-name\">Last name</label>\n                <input type=\"text\" name='last-name' id='last-name' placeholder='Last Name' />\n                </div>\n                <div>\n                <label htmlFor=\"username\">Email</label>\n                <input type=\"text\" name='username' id='username' />\n                </div>\n                <div>\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name='password' id='password' />\n                </div>\n                <Link to=\"/find-a-hike\"><button type='submit'>Sign Up</button></Link>\n                <div className=\"mt-2\">\n                    <span>Already have an account? </span>\n                    <Link to='/login'><span className=\"loginText\">Login here</span></Link>\n                </div>\n            </form>\n        </Element>\n    </main>\n        </div>\n    )\n}","import React from 'react';\n\nexport default function Footer() {\n    return (\n        <footer role=\"content-info\">\n            <p>Created by Steven Milano</p>\n        </footer>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Scroll from 'react-scroll'\nconst ScrollLink = Scroll.Link\n\nexport default function Nav() {\n    return (\n        <nav>\n            <Link to=\"/hiking-tick-list\">Home</Link>\n            <ScrollLink\n                to=\"signup-form\" \n                spy={true} \n                smooth={true} \n                duration={500} \n                className='signup-form' \n                activeClass='signup-form-active'>\n                Sign up\n            </ScrollLink>\n            <Link to=\"/hiking-tick-list/find-a-hike\">Find a hike</Link>\n            <Link to=\"/hiking-tick-list/tick-list\">Tick List</Link>\n        </nav>\n    );\n}\n","import React from 'react'\nimport HikeCard from '../HikeCard/HikeCard'\n\nexport default function TickList() {\n    return (\n        <div>\n            <header role=\"banner\">\n        <h1>My hikes</h1>\n      </header>\n      <section>\n          <form action=\"/action_page.php\">\n            <label htmlFor=\"trail\">Trail</label>\n            <input type=\"text\" id=\"trail\" name=\"trail\" placeholder=\"Appalachian trail\"/>\n            <label htmlFor=\"Length\">address</label>\n            <input type=\"text\" id=\"address\" name=\"address\" placeholder=\"Appalachian trail\"/>\n            <select name=\"completed\" id=\"completed\">\n              <label htmlFor=\"completed\">Completed Hike</label>\n              <option value=\"True\">True</option>\n              <option value=\"False\">Flase</option>\n            </select>\n            <button>Filter</button>\n          </form>\n          <HikeCard />\n      </section>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport FindAHike from './components/FindAHike/FindAHike';\nimport LandingPage from './components/LandingPage/LandingPage';\nimport Footer from './components/Footer/Footer';\nimport Nav from './components/Nav/Nav';\nimport TickList from './components/TickList/TickList';\nimport Geocode from 'react-geocode';\n\n// https://www.hikingproject.com/data/get-trails?\n// 200793847-c31065fb4a7ef9c4bec2522c771d7f3c\n\nGeocode.setApiKey(\"AIzaSyD1OurySFNmim0G5iuXQ-8To7tec6RO0qk\");\nGeocode.setLanguage(\"en\");\n\n\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\n\nfunction App() {\n\n  const [address, setAddress] = React.useState(\"\");\n  const [maxResults, setMaxResults] = React.useState(0);\n  const [minLength, setMinLength] = React.useState(0);\n  const [minStars, setMinStars] = React.useState(0);\n  const [maxDistance, setMaxDistance] = React.useState(0);\n  const [map, setMap] = React.useState(null);\n  const [lat, setLat] = React.useState(0);\n  const [lng, setLng] = React.useState(0);\n  const [url, setUrl] = React.useState(\"\");\n  const [data, setData] = React.useState({});\n  const [center, setCenter] = React.useState({lat: -34.397, lng: 150.644 })\n  const [status, setStatus] = React.useState('idle');\n  const [position, setPosition] = React.useState([]);\n  const [response, setResponse] = React.useState([]);\n  const [error, setError] = React.useState(null);\n  const [marker, setMarker] = React.useState(null);\n  const [value, setValue] = React.useState(2);\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map)\n  }, [])\n \n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Nav />\n      </header>\n      <div>\n        <Route exact path=\"/hiking-tick-list\" \n          render={(props) => (\n            <LandingPage \n            onUnmount={onUnmount} \n            onLoad={onLoad} \n            center={center}\n            containerStyle={containerStyle}\n            address={address}\n            setAddress={setAddress}\n            maxResults={maxResults}\n            setMaxResults={setMaxResults}\n            minLength={minLength}\n            setMinLength={setMinLength}\n            minStars={minStars}\n            setMinStars={setMinStars}\n            maxDistance={maxDistance}\n            setMaxDistance={setMaxDistance}\n            lat={lat}\n            setLat={setLat}\n            lng={lng}\n            setLng={setLng}\n            data={data}\n            setData={setData}\n            url={url}\n            setUrl={setUrl} \n            center={center}\n            setCenter={setCenter} \n            status={status}\n            setStatus={setStatus}\n            position={position}\n            setPosition={setPosition}\n            response={response}\n            setResponse={setResponse}\n            error={error}\n            setError={setError}\n            marker={marker}\n            setMarker={setMarker}\n            value={value}\n            setValue={setValue}/>\n          )} />\n        <Route path=\"/hiking-tick-list/find-a-hike\" render={(props) => (\n            <FindAHike\n            onUnmount={onUnmount} \n            onLoad={onLoad} \n            center={center}\n            containerStyle={containerStyle}\n            address={address}\n            setAddress={setAddress}\n            maxResults={maxResults}\n            setMaxResults={setMaxResults}\n            minLength={minLength}\n            setMinLength={setMinLength}\n            minStars={minStars}\n            setMinStars={setMinStars}\n            maxDistance={maxDistance}\n            setMaxDistance={setMaxDistance}\n            lat={lat}\n            setLat={setLat}\n            lng={lng}\n            setLng={setLng}\n            data={data}\n            setData={setData}\n            url={url}\n            setUrl={setUrl} \n            center={center}\n            setCenter={setCenter} \n            status={status}\n            setStatus={setStatus}\n            position={position}\n            setPosition={setPosition}\n            response={response}\n            setResponse={setResponse}\n            error={error}\n            setError={setError}\n            marker={marker}\n            setMarker={setMarker}\n            value={value}\n            setValue={setValue} />\n          )} />\n        <Route path=\"/hiking-tick-list/tick-list\" component={TickList} />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);"],"sourceRoot":""}